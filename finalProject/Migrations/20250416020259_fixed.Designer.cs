// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using finalProject.Data;

#nullable disable

namespace finalProject.Migrations
{
    [DbContext(typeof(DB))]
    [Migration("20250416020259_fixed")]
    partial class @fixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("finalProject.Models.AI_Compulsory", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<string>("prerequest")
                        .HasColumnType("longtext");

                    b.HasKey("code");

                    b.ToTable("AI Requirements_Compulsory");
                });

            modelBuilder.Entity("finalProject.Models.AI_Electives", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<string>("prerequest")
                        .HasColumnType("longtext");

                    b.HasKey("code");

                    b.ToTable("AI Requirements_Electives");
                });

            modelBuilder.Entity("finalProject.Models.CS_Compulsory", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<string>("prerequest")
                        .HasColumnType("longtext");

                    b.HasKey("code");

                    b.ToTable("CS Requirements_Compulsory");
                });

            modelBuilder.Entity("finalProject.Models.CS_Electives", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<string>("prerequest")
                        .HasColumnType("longtext");

                    b.HasKey("code");

                    b.ToTable("CS Requirements_Electives");
                });

            modelBuilder.Entity("finalProject.Models.Faculty_Compulsory", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<string>("prerequest")
                        .HasColumnType("longtext");

                    b.HasKey("code");

                    b.ToTable("Faculty Requirements_Compulsory");
                });

            modelBuilder.Entity("finalProject.Models.Faculty_Electives", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<string>("prerequest")
                        .HasColumnType("longtext");

                    b.HasKey("code");

                    b.ToTable("Faculty Requirements_Electives");
                });

            modelBuilder.Entity("finalProject.Models.General_Compulsory", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<string>("prerequest")
                        .HasColumnType("longtext");

                    b.HasKey("code");

                    b.ToTable("General Requirements_Compulsory");
                });

            modelBuilder.Entity("finalProject.Models.General_Electives", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<string>("prerequest")
                        .HasColumnType("longtext");

                    b.HasKey("code");

                    b.ToTable("General Requirements_Electives");
                });

            modelBuilder.Entity("finalProject.Models.IS_Compulsory", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<string>("prerequest")
                        .HasColumnType("longtext");

                    b.HasKey("code");

                    b.ToTable("IS Requirements_Compulsory");
                });

            modelBuilder.Entity("finalProject.Models.IS_Electives", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<string>("prerequest")
                        .HasColumnType("longtext");

                    b.HasKey("code");

                    b.ToTable("IS Requirements_Electives");
                });

            modelBuilder.Entity("finalProject.Models.IT_Compulsory", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<string>("prerequest")
                        .HasColumnType("longtext");

                    b.HasKey("code");

                    b.ToTable("IT Requirements_Compulsory");
                });

            modelBuilder.Entity("finalProject.Models.IT_Electives", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<string>("prerequest")
                        .HasColumnType("longtext");

                    b.HasKey("code");

                    b.ToTable("IT Requirements_Electives");
                });

            modelBuilder.Entity("finalProject.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int?>("StudentSubjectStudentId")
                        .HasColumnType("int");

                    b.Property<string>("StudentSubjectSubjectCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SubjectCode")
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<string>("department")
                        .HasColumnType("longtext");

                    b.Property<float?>("gpa")
                        .HasColumnType("float");

                    b.Property<int?>("hours")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("lastName")
                        .HasColumnType("longtext");

                    b.Property<string>("level")
                        .HasColumnType("longtext");

                    b.Property<string>("role")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("StudentSubjectStudentId", "StudentSubjectSubjectCode");

                    b.ToTable("students");
                });

            modelBuilder.Entity("finalProject.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("grade")
                        .HasColumnType("longtext");

                    b.Property<string>("ssCode")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ssId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "SubjectCode");

                    b.HasIndex("ssCode");

                    b.HasIndex("ssId");

                    b.ToTable("StudentSubjects");
                });

            modelBuilder.Entity("finalProject.Models.Subject", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_Name")
                        .HasColumnType("longtext");

                    b.Property<int>("hours")
                        .HasColumnType("int");

                    b.HasKey("code");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("finalProject.Models.Student", b =>
                {
                    b.HasOne("finalProject.Models.StudentSubject", "StudentSubject")
                        .WithMany("students")
                        .HasForeignKey("StudentSubjectStudentId", "StudentSubjectSubjectCode");

                    b.Navigation("StudentSubject");
                });

            modelBuilder.Entity("finalProject.Models.StudentSubject", b =>
                {
                    b.HasOne("finalProject.Models.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("ssCode");

                    b.HasOne("finalProject.Models.Student", "Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("ssId");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("finalProject.Models.Student", b =>
                {
                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("finalProject.Models.StudentSubject", b =>
                {
                    b.Navigation("students");
                });

            modelBuilder.Entity("finalProject.Models.Subject", b =>
                {
                    b.Navigation("StudentSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
